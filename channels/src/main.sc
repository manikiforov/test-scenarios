require: /dictionaries/customerOrientationQuestions.csv
  name = customerOrientation
  var = $customerOrientation

require: /dictionaries/teamQuestions.csv
  name = teamQuestions
  var = $teamQuestions
  
require: /dictionaries/communication.csv
  name = communicationQuestions
  var = $communicationQuestions

require: /dictionaries/focus.csv
  name = focusQuestions
  var = $focusQuestions

require: /scripts/question.js

require: /scripts/zenflow.js



init:
    Zenflow.init(); //—Å–¥–µ–ª–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ —Å–≤–æ–µ–≥–æ —Å–∞–π—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≤ –≤–∏–¥–∂–µ—Ç–µ –≤ –æ–±—ä–µ–∫—Ç–µ start
    
    if (!$global.$converters) {
        $global.$converters = {};
    }

    $global.$converters
        .customerOrientationConverter = function(parseTree) {
            var id = parseTree.customerOrientation[0].value;
            return $customerOrientation[id].value;
        };

    $global.$converters
        .teamConverter = function(parseTree) {
            var id = parseTree.teamQuestions[0].value;
            return $teamQuestions[id].value;
        };

    $global.$converters
        .communicationConverter = function(parseTree) {
            var id = parseTree.communicationQuestions[0].value;
            return $communicationQuestions[id].value;
        };

    $global.$converters
        .focusConverter = function(parseTree) {
            var id = parseTree.focusQuestions[0].value;
            return $focusQuestions[id].value;
        };
        
    bind("preProcess", function($context) {
        var $session = $jsapi.context().session;
        //–ù—É–∂–µ–Ω –¥–ª—è CatchAll
        $session.lastState =  $context.contextPath;
    });
patterns:
    $customerOrientation = $entity<customerOrientation> || converter = $converters.customerOrientationConverter
    $teamQuestions = $entity<teamQuestions> || converter = $converters.teamConverter
    $communicationQuestions = $entity<communicationQuestions> || converter = $converters.communicationConverter
    $focusQuestions = $entity<focusQuestions> || converter = $converters.focusConverter
    $Text = *
    
    
    
theme: /CV

    state: Enter
        q!: (—Ç–µ—Å—Ç/*start)
        a: –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã
        a: –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—é—Å—å: —è –¥–∏—Ä–µ–∫—Ç–æ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –ú–∞–∫–¥–æ–Ω–∞–ª–¥—Å üë±
        a: –ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –í–∞—Å –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ, —è –±—ã —Ö–æ—Ç–µ–ª —É–∑–Ω–∞—Ç—å –í–∞—Å –ø–æ–ª—É—á—à–µ.
        a: –Ø –∑–∞–¥–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∞ –í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –í–∞–º –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞, –∫–ª–∏–∫–Ω—É–≤ –ø–æ –Ω–µ–º—É.üëç
        script:
            QuestionService.init();
            $session.curAnswers = [];  //—Å–æ–∑–¥–∞—Ç—å —Ç–∞–∫–æ–µ –ø–æ–ª–µ –≤ questionService
        go!:../Customer orientation questionarie

    state: Customer orientation questionarie        
        script:
            $session.i = $session.i || 0;
        if: $session.i < 4
            script:
                $session.themeQuestionarie = "Customer orientation";
                QuestionService.generateQuestions($session.themeQuestionarie);
                $session.i++;
        elseif: $session.i == 4
            if: QuestionService.partWasRotated("Customer orientation")
                script:
                    QuestionService.generateQuestions($session.themeQuestionarie);
            else:
                script:
                    QuestionService.generateRotataionQuestion($customerOrientation);
            script:
                $session.i++;
        else:
            a: –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ ü§î\n–í–æ–∑–º–æ–∂–Ω–æ, –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö —è –ø–æ—Å—Ç—É–ø–∏–ª –±—ã —Ç–∞–∫ –∂–µ‚Ä¶ 
            a: –í—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å, –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏–º!
            script:
                $session.i = 0;
            go!: ../Team questionarie

    state: Team questionarie
        script:
            $session.i = $session.i || 0;
        if: $session.i < 4
            script:
                $session.themeQuestionarie = "Team";
                QuestionService.generateQuestions($session.themeQuestionarie);
                $session.i++;
        elseif: $session.i == 4
            if: QuestionService.partWasRotated("Team")
                script:
                    QuestionService.generateQuestions($session.themeQuestionarie);
            else:
                script:
                    QuestionService.generateRotataionQuestion($teamQuestions);
            script:
                $session.i++;
        else:
            a: –ó–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞–º–∏ –≤—Ä–µ–º—è –ª–µ—Ç–∏—Ç –Ω–µ–∑–∞–º–µ—Ç–Ω–æ, –ø—Ä–∞–≤–¥–∞?‚è∞
            a: –ú—ã –≤ –ú–∞–∫–¥–æ–Ω–∞–ª–¥—Å —Ü–µ–Ω–∏–º –æ—Ç–∫—Ä—ã—Ç–æ–µ –æ–±—â–µ–Ω–∏–µ. –ò –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å –í–∞–º–∏ –±–µ—Å–µ–¥–æ–≤–∞—Ç—å!üôÇ
            a: üôå–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º!
            script:
                $session.i = 0;
            go!: ../Communication questionarie



    state: Communication questionarie 
        script:
            $session.i = $session.i || 0;
        if: $session.i < 4
            script:
                $session.themeQuestionarie = "Communication";
                QuestionService.generateQuestions($session.themeQuestionarie);
                $session.i++;
        elseif: $session.i == 4
            if: QuestionService.partWasRotated("Communication")
                script:
                    QuestionService.generateQuestions($session.themeQuestionarie);
            else:
                script:
                    QuestionService.generateRotataionQuestion($communicationQuestions);
            script:
                $session.i++;
        else:
            a: –°–ø–∞—Å–∏–±–æ –í–∞–º –∑–∞ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å!üôè
            a: –£ –º–µ–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤‚Ä¶ –Ø –∑–∞–¥–∞–º –∏—Ö, –∏ –í—ã —Å–º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–≤–æ–∏–º –¥–µ–ª–∞–º.üëå 
            script:
                $session.i = 0;
            go!: ../Focus questionarie
    
    
    state: Focus questionarie
        script:
            $session.i = $session.i || 0;
        if: $session.i < 4
            script:
                $session.themeQuestionarie = "Focus";
                QuestionService.generateQuestions($session.themeQuestionarie);
                $session.i++;
        elseif: $session.i == 4
            if: QuestionService.partWasRotated("Focus")
                script:
                    QuestionService.generateQuestions($session.themeQuestionarie);
            else:
                script:
                    QuestionService.generateRotataionQuestion($focusQuestions);
            script:
                $session.i++;
        else:
            script:
                $session.i = 0;
            go!: ../Check results


    state: Check results
        if: QuestionService.finalScoreBigEnough()
            if: $session.testResults.customerOrientationScore <= 6
                script:
                    $session.testResults.finalScore -= 15;
                go!: ../Tell results
            elseif: $session.testResults.customerOrientationScore >= 14
                script:
                    $session.i = 0;
                go!:../Ask other customer orientation questions
        else:
            go!: ../Tell results

                
    state: Ask other customer orientation questions
        script:
            $session.i = $session.i || 0;
        if: $session.i < 5
            script:
                $session.themeQuestionarie = "Customer orientation last";
                QuestionService.generateQuestions($session.themeQuestionarie);
                $session.i++;
        else:
            go!: ../Tell results
            
    state: Tell results
        a: –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n –±–∞–ª–ª –∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å: {{$session.testResults.customerOrientationScore}} \n–±–∞–ª–ª –∑–∞ —É–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ: {{$session.testResults.teamScore}} \n–±–∞–ª–ª –∑–∞ –Ω–∞–≤—ã–∫–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏: {{$session.testResults.communicationScore}} \n–±–∞–ª–ª –∑–∞ —É–º–µ–Ω–∏–µ –¥–µ—Ä–∂–∞—Ç—å —Ñ–æ–∫—É—Å: {{$session.testResults.focusScore}} \n–æ–±—â–∏–π –±–∞–ª–ª: {{$session.testResults.finalScore}}.
        a: –ö–∞–∂–µ—Ç—Å—è, —Ç–µ–ø–µ—Ä—å —è —É–∑–Ω–∞–ª –í–∞—Å –æ—Ç–ª–∏—á–Ω–æ!üòä
        a: –ë—ã–ª–æ –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è, —Å–ø–∞—Å–∏–±–æ!
        a: –ù–∞–¥–µ—é—Å—å, –º–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–ø–æ–º–Ω–∏–ª–∏ –í–∞–º –æ –∑–Ω–∞–∫–æ–º—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≤–ª–µ–∫–ª–∏.‚úåüèª‚ú®üéâ
        a: –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–¥ –í–∞—à–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –º—ã —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –∏ —Ä–∞—Å—Å–∫–∞–∂–µ–º –æ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —à–∞–≥–∞—Ö.
        a: –ê –ø–æ–∫–∞ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—á–∏—Ç–∞—Ç—å –æ –≥—Ä–∞—Ñ–∏–∫–µüìã, —Ä–∞–±–æ—á–µ–π —É–Ω–∏—Ñ–æ—Ä–º–µüëï, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –∫—É–ª—å—Ç—É—Ä–µ üéà–∏ –¥–µ—Ç–∞–ª—è—Ö —Ä–∞–±–æ—Ç—ã.

    
    state: Get answer
        q: $Text || fromState = "/CV/Customer orientation questionarie"
        q: $Text || fromState = "/CV/Team questionarie"
        q: $Text || fromState = "/CV/Communication questionarie"
        q: $Text || fromState = "/CV/Focus questionarie"
        q: $Text || fromState = "/CV/Ask other customer orientation questions"
        script:
            $session.curAnswers = [];
            for (var i = 0; i < $session.currentQuestion.answers.length; i++){
                var bb = $session.currentQuestion.answers[i].text.replace(/[.,\/#%!\^\*;:{}=\_`~()]/g,"").toLowerCase().split(" ");
                var answerPattern = "* " + (bb[bb.length-3] + " " + bb[bb.length-2] + " " + bb[bb.length-1]).replace(/[.,\/#%!\^\*;:{}=\_`~()]/g,"").toLowerCase();
                $session.curAnswers.push(answerPattern);
            }
            var match = $nlp.matchPatterns($parseTree._Text.replace(/[.,\/#%!\^\*;:{}=\_`~()]/g,"").toLowerCase(), $session.curAnswers);
            if(match){
                var transformMatch = match.effectivePattern.toLowerCase();
                var index = $session.curAnswers.indexOf(transformMatch);
                
                $session.testResults.finalScore = $session.testResults.finalScore + parseInt($session.currentQuestion.answers[index].score);

                switch($session.themeQuestionarie){
                    case "Customer orientation":
                        $session.testResults.customerOrientationScore = $session.testResults.customerOrientationScore + parseInt($session.currentQuestion.answers[index].score);
                        $reactions.transition("/CV/Customer orientation questionarie");
                        break;

                    case "Team":
                        $session.testResults.teamScore = $session.testResults.teamScore + parseInt($session.currentQuestion.answers[index].score);
                        $reactions.transition("/CV/Team questionarie");
                        break;
                        
                    case "Communication":
                        $session.testResults.communicationScore = $session.testResults.communicationScore + parseInt($session.currentQuestion.answers[index].score);
                        $reactions.transition("/CV/Communication questionarie");
                        break;

                    case "Focus":
                        $session.testResults.focusScore = $session.testResults.focusScore + parseInt($session.currentQuestion.answers[index].score);
                        $reactions.transition("/CV/Focus questionarie");
                        break;

                    case "Customer orientation last":
                        $session.testResults.customerOrientationScore = $session.testResults.customerOrientationScore + parseInt($session.currentQuestion.answers[index].score);
                        $reactions.transition("/CV/Ask other customer orientation questions");
                        break;
                }       
            } else {
                $reactions.transition("/CV/CatchAll");
            }



    state: CatchAll
        q!: *
        random:
            a: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞.
            a: –í–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞.
            a: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.
        a: {{$session.curQuestionAnswer}}
        go!: {{$session.lastState}}